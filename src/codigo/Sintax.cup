package codigo;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

terminal Suma, Resta, Multiplicacion, Division, Asignacion, Porcentaje, Op_Relacional,
    Corchete_a, Corchete_c, Parentesis_a, Parentesis_c, Comillas, Coma, PuntoComa, 
    Concatenar, Declaracion, Entero, Decimal, Flotante, vString, Boleano, funcion,
    Modificadores_Acceso, Salida, If, FinIf, IfElse, While, hastaW, FinWhile, For,
    desdeF, finF, pasoF, forFin, DoWhile, DoWhileFin, TipoEntero, Verdadero, TipoPisto,
    TipoCentavo, TipoLen, LlamaFuncion, tApertura, tCierre, DosPuntos, Identificador,
    digito, CumpleBloque, Clase, Constructor, ClaseFin, Atributo, ConstructorFin,
    Llave_a, Llave_c; 
non terminal IMPRIMIR, INI_IMP, VALOR, FIN_IMP, VALOR2, CADENA, DEC_VAR, VARIABLES,
    IF, SENTENCIA_RELACION, COD_IF, CIERREIF, ELSE, CICLO_WHILE, SEN_REL, COD_WHILE,
    CIERRE_WHILE;

/*imprimir*/

IMPRIMIR ::= 
        INI_IMP VALOR FIN_IMP |
        INI_IMP VALOR2 FIN_IMP
;
INI_IMP ::= 
        tApertura Salida DosPuntos
;
VALOR ::=
        Comillas CADENA Comillas |
        Comillas CADENA Comillas Concatenar Identificador |
        digito Concatenar Comillas CADENA Comillas Concatenar Identificador Comillas CADENA Comillas Concatenar Identificador
;
VALOR2 ::=
        Comillas CADENA Comillas Concatenar Identificador Concatenar VALOR2
;
FIN_IMP ::=
        tCierre
;
VARIABLES ::= 
        tApertura Declaracion DosPuntos DEC_VAR tCierre
;
DEC_VAR ::= 
            Entero tCierre |
            Entero Identificador|
            Decimal tCierre |
            Decimal Identificador|
            Flotante tCierre |
            Flotante Identificador|
            Boleano tCierre |
            vString Identificador Asignacion Comillas CADENA Comillas
;
CADENA ::= 
        Identificador | 
        Identificador CADENA
;    
/*if, if else, if else if */
IF ::= 
    tApertura If DosPuntos SENTENCIA_RELACION tCierre COD_IF
;
SENTENCIA_RELACION ::= 
        Corchete_a Identificador Op_Relacional Identificador Corchete_c |
        Corchete_a Identificador Op_Relacional digito Corchete_c
;
COD_IF ::= 
            IMPRIMIR CIERREIF |
            IMPRIMIR ELSE
;
ELSE ::= 
        tApertura IfElse tCierre COD_IF |
        tApertura IfElse tCierre IF
;
CIERREIF ::= 
        tApertura FinIf tCierre
;

/* while */
CICLO_WHILE ::= 
    tApertura While DosPuntos SEN_REL tCierre COD_WHILE IMPRIMIR CIERRE_WHILE
;
SEN_REL ::= 
        hastaW Corchete_a Identificador Op_Relacional digito Corchete_c |
        hastaW Corchete_a Identificador Op_Relacional Identificador Corchete_c
;
COD_WHILE ::= 
        Identificador Asignacion Identificador Suma digito |
        Identificador Asignacion Identificador Resta digito |
        Identificador Asignacion Identificador Multiplicacion digito |
        Identificador Asignacion Identificador Division digito
;
CIERRE_WHILE ::= 
            tApertura FinWhile tCierre
;
